package readFiles;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

public class BeyondCompare {
	static String file1path = "C:\\Users\\Anil\\Documents\\X12.txt";
	static String file2path = "C:\\Users\\Anil\\Documents\\X12 - Copy.txt";

	public static void main(String[] args) throws Exception {
		
		//"‪C:"+System.getProperty("file.separator")+"Program Files"+System.getProperty("file.separator")+"Beyond Compare 4"+System.getProperty("file.separator")+"BComp.exe",
        
		
		 BufferedReader br = null;
	        String strLine = "";
	        try {
	            LineNumberReader reader = new LineNumberReader(new InputStreamReader(new FileInputStream(file1path)));
	                while (((strLine = reader.readLine()) != null) && reader.getLineNumber() >= 3){
	                System.out.println(strLine);
	            }
	           reader.close();
	        } catch (FileNotFoundException e) {
	            System.err.println("File not found");
	        } catch (IOException e) {
	            System.err.println("Unable to read the file.");
	        }
		
		/*ProcessBuilder processBuilder = new ProcessBuilder("‪‪‪C:\\Program Files\\Beyond Compare 4\\BCompare.exe",
	            "file1path", "file2path","/fv=Text Compare", "/qc=binary");

	    Process ps;
	    try {
	        ps = processBuilder.start();
	        OutputStream os = ps.getOutputStream();
	        os.close();

	        InputStream inputStream = ps.getInputStream();
	        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
	        for (String line = bufferedReader.readLine(); line != null; line = bufferedReader.readLine()) {
	        }

	        ps.waitFor();
	        System.out.println("Exit value :" + ps.exitValue());
	    } catch (IOException e) {
	        e.printStackTrace();
	    } catch (InterruptedException e) {
	        e.printStackTrace();
	    }*/
	}	
	}	

