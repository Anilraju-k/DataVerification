package readFiles;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Scanner;

public class BeyondCompare {
	static String file1path = "C:\\Users\\Anil\\Documents\\X12.txt";
	static String file2path = "C:\\Users\\Anil\\Documents\\X12 - Copy.txt";

	public static void main(String[] args) throws Exception {
		
		removeFirst3Last2Lines(file1path);
		removeFirst3Last2Lines(file2path);
		boolean status=compareFiles(file1path,file2path);
		System.out.println("Status - "+status);
	}

	
	
	private static void removeFirst3Last2Lines(String file1path) throws IOException {
		// TODO Auto-generated method stub
		File path = new File(file1path);
		Scanner scanner = new Scanner(path);
		ArrayList<String> coll = new ArrayList<String>();
		scanner.nextLine();
		scanner.nextLine();
		scanner.nextLine();		
		while (scanner.hasNextLine()) {
		    String line = scanner.nextLine();
		    coll.add(line);
		}
		scanner.close();
		FileWriter writer = new FileWriter(path);
		for (int i = 0; i < coll.size()-2; i++) {
			 writer.write(coll.get(i));
			 writer.write('\n');
		}
		
		writer.close();
		System.out.println("Removed first 3lines &last 2 lines of file @ "+file1path);
		
}
	

	private static boolean compareFiles(String file1path2, String file2path2) {
		// TODO Auto-generated method stub
		ProcessBuilder processBuilder = new ProcessBuilder("C:\\Program Files\\Beyond Compare 4\\BCompare.exe",
	            file1path, file2path,"/fv=Text Compare", "/qc=binary");

	    Process ps;
	    try {
	        ps = processBuilder.start();
	        OutputStream os = ps.getOutputStream();
	        os.close();

	        InputStream inputStream = ps.getInputStream();
	        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
	        for (String line = bufferedReader.readLine(); line != null; line = bufferedReader.readLine()) {
	        }

	        ps.waitFor();
	        System.out.println("Exit value :" + ps.exitValue());
	        if(ps.exitValue()==0 ||ps.exitValue()==1||ps.exitValue()==2)
	        	return true;
	    } catch (IOException e) {
	        e.printStackTrace();
	    } catch (InterruptedException e) {
	        e.printStackTrace();
	    }
		return false;
	}	
	}
/*
Exit Codes - 	
0	Success
1	Binary same
2	Rules-based same
11	Binary differences
12	Similar
13	Rules-based differences
14	Conflicts detected
100	Unknown error
101	Conflicts detected, merge output not written
102	BComp.exe unable to wait until BCompare.exe finishes
103	BComp.exe cannot find BCompare.exe
104	Trial period expired
105	Error loading script file
106	Script syntax error
107	Script failed to load folders or files*/

